TestCase subclass: #TestPunto	instanceVariableNames: ''	classVariableNames: ''	package: 'PuntoRecta-Test'!!TestPunto methodsFor: 'running' stamp: 'DS 9/18/2021 19:42'!testPaso3CrearConCartesianas	| ceroCero |	ceroCero := Punto x: 1 y: 1.		self assert: (ceroCero ro) closeTo: 2 sqrt.	self assert: (ceroCero teta) closeTo: (Float pi / 4).		! !!TestPunto methodsFor: 'running' stamp: 'DS 3/23/2023 20:12'!testPaso2CrearPuntoConPorales	| ceroCero |	ceroCero := Punto ro: 1 teta: (Float pi / 2).		self assert: (ceroCero x) closeTo: 0.	self assert: (ceroCero y) closeTo: 1.	self assert: (ceroCero ro) closeTo: 1.	self assert: (ceroCero teta) closeTo: (Float pi / 2).! !!TestPunto methodsFor: 'running' stamp: 'DS 3/23/2023 20:22'!testPaso1CrearPuntoConCartesianas	| ceroCero otroCeroCero|	ceroCero := Punto new.		"Cuales son los atributos de instancia?"	self assert: (ceroCero x) equals: 0.	self assert: (ceroCero y) equals: 0.! !!TestPunto methodsFor: 'running' stamp: 'DS 9/23/2021 19:45'!testPaso4CrearPuntoConPoralesCeroCero	| ceroCero |	ceroCero := Punto new.		self assert: (ceroCero ro) closeTo: 0.	self assert: (ceroCero teta) closeTo: 0.		"Esto es para puristas... No me parece útil!!!!"	""	"Depende de la implementación del paradigma (?)"	"Ocultamiento:		(+): Poder modificar la implementación interna.		(+): El usuario no debe o no necesita saber como está implementado	"! !Object subclass: #Curso	instanceVariableNames: 'alumnos capacidad inscriptos'	classVariableNames: ''	package: 'PuntoRecta'!Object subclass: #FloatLargo	instanceVariableNames: 'valor'	classVariableNames: ''	package: 'PuntoRecta'!!FloatLargo methodsFor: 'as yet unclassified' stamp: 'DS 9/23/2021 19:36'!** anInteger 	^valor ** anInteger .! !!FloatLargo methodsFor: 'converting' stamp: 'DS 9/23/2021 19:37'!asFloat	^valor asFloat ! !!FloatLargo methodsFor: 'converting' stamp: 'DS 9/23/2021 19:38'!= otroValor	^valor = otroValor ! !!FloatLargo methodsFor: 'initialization' stamp: 'DS 9/23/2021 19:31'!initialize 	valor := 0! !Object subclass: #Punto	instanceVariableNames: 'x y'	classVariableNames: ''	package: 'PuntoRecta'!!Punto methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2021 19:29'!ro	^(x ** 2 + (y ** 2)) sqrt.! !!Punto methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2021 19:20'!ro: roValor teta: tetaValo	x := roValor * tetaValo cos.	y := roValor * tetaValo sin.! !!Punto methodsFor: 'as yet unclassified' stamp: 'DS 9/23/2021 19:43'!teta	(x = 0) ifFalse: [ 		^(y / (x asFloat) "licencia esto no tiene sentido en nuestro contexto." ) arcTan.	].	^0.	 ! !!Punto methodsFor: 'instance creation' stamp: 'DS 3/23/2023 19:50'!x: xValor y: yValor	x := xValor.	y := yValor.! !!Punto methodsFor: 'accessing - structure variables' stamp: 'DS 9/18/2021 19:00'!y	^y! !!Punto methodsFor: 'accessing - structure variables' stamp: 'DS 9/18/2021 18:59'!x	^x! !!Punto methodsFor: 'accessing - structure variables' stamp: 'DS 3/23/2023 20:30'!initialize 	x := 0.	y := 0.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Punto class	instanceVariableNames: 'x y'!!Punto class methodsFor: 'instance creation' stamp: 'DS 9/18/2021 19:27'!x: xValor y: yValor 	|result|	result := self new.		result x: xValor y: yValor.		^result.! !!Punto class methodsFor: 'as yet unclassified' stamp: 'DS 9/18/2021 19:06'!ro: roValor teta: tetaValo 	|result|	result := self new.	result ro: roValor teta: tetaValo .	^result.! !